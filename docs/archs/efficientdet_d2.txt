EfficientDet(
  (backbone): EfficientNet(
    (features): Sequential(
      (0): ConvNormActivation(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): SiLU(inplace=True)
      )
      (1): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (2): ConvNormActivation(
              (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.0, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
              (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (2): ConvNormActivation(
              (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.008695652173913044, mode=row)
        )
      )
      (2): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
              (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(96, 4, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(4, 96, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.017391304347826087, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.026086956521739136, mode=row)
        )
        (2): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.034782608695652174, mode=row)
        )
      )
      (3): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=144, bias=False)
              (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.043478260869565216, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.05217391304347827, mode=row)
        )
        (2): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.06086956521739131, mode=row)
        )
      )
      (4): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(288, 288, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=288, bias=False)
              (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(288, 12, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(12, 288, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(288, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.06956521739130435, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(528, 528, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=528, bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(528, 22, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(22, 528, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.0782608695652174, mode=row)
        )
        (2): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(528, 528, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=528, bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(528, 22, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(22, 528, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.08695652173913043, mode=row)
        )
        (3): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(528, 528, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=528, bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(528, 22, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(22, 528, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(528, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.09565217391304348, mode=row)
        )
      )
      (5): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(88, 528, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(528, 528, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=528, bias=False)
              (1): BatchNorm2d(528, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(528, 22, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(22, 528, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(528, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.10434782608695654, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(720, 720, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=720, bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(720, 30, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(30, 720, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(720, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.11304347826086956, mode=row)
        )
        (2): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(720, 720, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=720, bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(720, 30, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(30, 720, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(720, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.12173913043478261, mode=row)
        )
        (3): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(720, 720, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=720, bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(720, 30, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(30, 720, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(720, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.13043478260869565, mode=row)
        )
      )
      (6): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(720, 720, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=720, bias=False)
              (1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(720, 30, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(30, 720, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(720, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.1391304347826087, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(1248, 1248, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1248, bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(1248, 52, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(52, 1248, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(1248, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.14782608695652175, mode=row)
        )
        (2): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(1248, 1248, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1248, bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(1248, 52, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(52, 1248, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(1248, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.1565217391304348, mode=row)
        )
        (3): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(1248, 1248, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1248, bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(1248, 52, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(52, 1248, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(1248, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.16521739130434784, mode=row)
        )
        (4): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(1248, 1248, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=1248, bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(1248, 52, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(52, 1248, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(1248, 208, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.17391304347826086, mode=row)
        )
      )
      (7): Sequential(
        (0): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(208, 1248, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(1248, 1248, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1248, bias=False)
              (1): BatchNorm2d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(1248, 52, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(52, 1248, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(1248, 352, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.1826086956521739, mode=row)
        )
        (1): MBConv(
          (block): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(352, 2112, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(2112, 2112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2112, bias=False)
              (1): BatchNorm2d(2112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): SiLU(inplace=True)
            )
            (2): SqueezeExcitation(
              (avgpool): AdaptiveAvgPool2d(output_size=1)
              (fc1): Conv2d(2112, 88, kernel_size=(1, 1), stride=(1, 1))
              (fc2): Conv2d(88, 2112, kernel_size=(1, 1), stride=(1, 1))
              (activation): SiLU(inplace=True)
              (scale_activation): Sigmoid()
            )
            (3): ConvNormActivation(
              (0): Conv2d(2112, 352, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (stochastic_depth): StochasticDepth(p=0.19130434782608696, mode=row)
        )
      )
    )
  )
  (neck): BiFPN(
    (resamples): ModuleList(
      (0): Conv2d(352, 112, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): Sequential(
        (0): ReLU(inplace=True)
        (1): Conv2d(112, 112, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
    )
    (blocks): ModuleList(
      (0): BiFPNBlock(
        (x2h_convs): ModuleList(
          (0): Conv2d(48, 112, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(120, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(352, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Identity()
        )
        (h2y_convs): ModuleList(
          (0): Identity()
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
        )
        (x2y_convs): ModuleList(
          (0): None
          (1): Conv2d(120, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(352, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): None
        )
        (up): Upsample(scale_factor=2.0, mode=nearest)
        (dw): Upsample(scale_factor=0.5, mode=nearest)
        (convs): ModuleList(
          (0): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (1): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (2): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (3): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (4): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (1): BiFPNBlock(
        (x2h_convs): ModuleList(
          (0): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Identity()
        )
        (h2y_convs): ModuleList(
          (0): Identity()
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
        )
        (x2y_convs): ModuleList(
          (0): None
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): None
        )
        (up): Upsample(scale_factor=2.0, mode=nearest)
        (dw): Upsample(scale_factor=0.5, mode=nearest)
        (convs): ModuleList(
          (0): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (1): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (2): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (3): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (4): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (2): BiFPNBlock(
        (x2h_convs): ModuleList(
          (0): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Identity()
        )
        (h2y_convs): ModuleList(
          (0): Identity()
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
        )
        (x2y_convs): ModuleList(
          (0): None
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): None
        )
        (up): Upsample(scale_factor=2.0, mode=nearest)
        (dw): Upsample(scale_factor=0.5, mode=nearest)
        (convs): ModuleList(
          (0): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (1): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (2): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (3): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (4): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (3): BiFPNBlock(
        (x2h_convs): ModuleList(
          (0): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Identity()
        )
        (h2y_convs): ModuleList(
          (0): Identity()
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
        )
        (x2y_convs): ModuleList(
          (0): None
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): None
        )
        (up): Upsample(scale_factor=2.0, mode=nearest)
        (dw): Upsample(scale_factor=0.5, mode=nearest)
        (convs): ModuleList(
          (0): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (1): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (2): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (3): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (4): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
      (4): BiFPNBlock(
        (x2h_convs): ModuleList(
          (0): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Identity()
        )
        (h2y_convs): ModuleList(
          (0): Identity()
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
        )
        (x2y_convs): ModuleList(
          (0): None
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (3): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1))
          (4): None
        )
        (up): Upsample(scale_factor=2.0, mode=nearest)
        (dw): Upsample(scale_factor=0.5, mode=nearest)
        (convs): ModuleList(
          (0): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (1): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (2): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (3): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (4): SeparableConv2d(
            (depthwise_conv): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
            (pointwise_conv): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
  )
  (head): EfficientHead(
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (4): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
    )
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
      (4): Sequential(
        (0): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
        (2): Sequential(
          (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=112)
          (1): Conv2d(112, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (2): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): SiLU(inplace=True)
        )
      )
    )
    (reg_top): Conv2d(112, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (cls_top): Conv2d(112, 180, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (reg_loss): SmoothL1Loss()
  (cls_loss): FocalLoss()
  (postprocess): MultiLabelNMS(min_score=0.01, select_top=200, nms_iou=0.45)
)